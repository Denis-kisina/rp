openapi: 3.0.1
servers:
  - url: https://apigargoyle.com
    description: Default server
info:
  title: Gargoyle API
  contact:
    name: Customer Support
    url: https://www.cyr3con-screen.com
    email: support@cybersecurityworks.com
  version: 1.0.0
  description: >
    # Introduction

    ## API Categories

    Below is how these APIs are arranged

    ## API Operations

    ### Account Operations

    Below is the list of supported operations

    # Authentication

    Gargoyle offers two forms of authentication:
      
      - Basic HTTP Authentication
      - API Key

tags:
  - name: Login
  - name: Diligence
  - name: Documentation
  - name: Forecast
  - name: Software CPE
  - name: Vulnerability

paths:
  /v1/account/login:
    post:
      summary: LOGIN
      tags:
        - Login
      description: >-
        authorizes user and returns apiKey required in all other endpoints
      operationId: Login
      parameters:
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: User ID
        - in: header
          name: password
          schema:
            type: string
            example: password
          required: true
          description: User password
      responses:
        "200":
          description: Return a 200 status to indicate user successful login
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LoginResponse"
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/401"
        "429":
          description: Too Many Requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/429"
  /docs/diligence:
    get:
      summary: DILIGENCE API
      tags:
        - Diligence
      description: Return all general APIs
      parameters:
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: ID of the user
        - in: header
          name: apiKey
          schema:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000001
          required: true
          description: API Key of the user
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  /docs:
    get:
      summary: DOCS
      tags:
        - Documentation
      description: Return all general APIs
      parameters:
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: ID of the user
        - in: header
          name: apiKey
          schema:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000001
          required: true
          description: API Key of the user
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  /docs/forecast:
    get:
      summary: FORECAST API
      tags:
        - Forecast
      description: Return all general APIs
      parameters:
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: ID of the user
        - in: header
          name: apiKey
          schema:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000001
          required: true
          description: API Key of the user
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
  /v1/software-cpe/mappings/files:
    post:
      summary: /v1/software-cpe/mappings/files
      tags:
        - Software CPE
      description: Sending data using `multipart/form-data`
      parameters:
        - in: query
          name: from
          schema:
            type: string
            format: date
            example: 2021-01-30
          required: false
          description: Date from which records needs to be fetched.
        - in: query
          name: to
          schema:
            type: string
            format: date
            example: 2021-01-30
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: ID of the user
        - in: header
          name: apiKey
          schema:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000001
          required: true
          description: API Key of the user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
          content:
            application/json:
              schema:
               type: array
               items:
                 type: number
               additionalProperties:
                 type: string
                 format: byte
  /v1/vulnerabilities/essentials:
    get:
      summary: Get Vulnerability essentials
      description: To get the essential info about the CVE
      operationId: getVulnerabilityEssentials
      tags:
        - Vulnerability
      parameters:
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: ID of the user
        - in: header
          name: apiKey
          schema:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000001
          required: true
          description: API Key of the user
        - in: query
          name: start
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: Start record for results to be retrieved.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 10
          required: false
          description: Number of records to be retrieved.
        - in: query
          name: vulnerabilityId
          schema:
            type: string
            example: cve-2018-13379
          required: false
          description: The ID of the vulnerability.
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponseVulnerabilityEssentials"
  /v1/vulnerabilities/info:
    get:
      summary: Get general vulnerability information
      description: Get general vulnerability information about any item or post.
      operationId: Vulnerability Info
      tags:
        - Vulnerability
      parameters:
        - in: header
          name: userId
          schema:
            type: string
            example: denis
          required: true
          description: ID of the user
        - in: header
          name: apiKey
          schema:
            type: string
            format: uuid
            example: 00000000-0000-0000-0000-000000000001
          required: true
          description: API Key of the user
        - in: query
          name: content
          schema:
            type: string
          required: false
          description: Used for content search over the content passed.
        - in: query
          name: severity
          schema:
            type: string
          required: false
          description: Severity of info (can be critical, high, medium, important).
        - in: query
          name: indicator
          schema:
            type: string
            example: post
          required: false
          description: this can be set to Item or Post.
        - in: query
          name: language
          schema:
            type: string
            example: en
          required: false
          description: Language of the original content.
        - in: query
          name: topicId
          schema:
            type: string
          required: false
          description: ID to search contents after particular record
        - in: query
          name: topicName
          schema:
            type: string
          required: false
          description: Name of a specific topic
        - in: query
          name: vulnerabilityIdf
          schema:
            type: array
            items:
              type: string
          required: false
          description: vulnerabilityId of any info record
        - in: query
          name: cyRating
          schema:
            type: number
          required: false
          description: Filters data based on cyRating of vulnerabilities
        - in: query
          name: rapid7
          schema:
            type: boolean
            example:
            - true
            - false
          required: false
          description: Boolean variable that decide whether to display data from rapid7 website or not.
        - in: query
          name: prEval
          schema:
            type: number
          required: false
          description: Boolean value to filter prEval records.
        - in: query
          name: enableFuzzy
          schema:
            type: boolean
            example: true
            default: true
          required: false
          description: If set to true, it will do the fuzzy search for the content being passed.
        - in: query
          name: phraseSearch
          schema:
            type: array
            items:
              type: string
          required: false
          description: Phrase that needs to be searched in the text.
        - in: query
          name: from
          schema:
            type: string
            example: 2021-06-06
            format: date
          required: false
          description: Date from which records needs to be fetched.
        - in: query
          name: to
          schema:
            type: string
            example: 2021-06-06
            format: date
          required: false
          description: Date till which records needs to be fetched.
        - in: query
          name: pastDay
          schema:
            type: boolean
          example: true
          required: false
          description: Boolean value to get data from past 5 days.
        - in: query
          name: getCount
          schema:
            type: boolean
            example: true
            default: false
          required: false
          description: Get result count.
        - in: query
          name: order
          schema:
            type: string
            example: recorded_date
            default: recorded_date
          required: false
          description: Sorts the records according to the parameter.
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 5000
            default: 10
          required: false
          description: Number of records to be retrieved.
        - in: query
          name: start
          schema:
            type: integer
            minimum: 0
            default: 0
          required: false
          description: Start record for results to be retrieved.
      responses:
        "200":
          description: Return a 200 status to indicate that the data was received successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GenericResponseVulnerabilityInfo"
      security:
        - http-basic: []
        - apiKey: []
components:
  securitySchemes:
    http-basic:
      type: http
      scheme: basic
    apiKey:
      type: apiKey
      name: apiKey
      in: header
  schemas:
    SoftwareCpeCveMappingsSearchCriteria:
      type: object
      properties:
        from:
          type: string
          description: Date from which records needs to be fetched.
          example: 
          - 2021-06-06
          format: date
        to:
          type: string
          description: Date till which records needs to be fetched.
    LoginResponse:
      description: "Login response schema "
      type: object
      properties:
        status:
          type: string
        userId:
          type: string
        roles:
          type: array
          items:
            type: string
        uiFeatures:
          type: array
          items:
            type: string
        apiKey:
          type: string
          example: "00000000-0000-0000-0000-000000000001"
          format: uuid
        apiKeyCreatedOn:
          type: string
          example: 2021-06-06
          format: date
        apiKeyExpiresOn:
          type: string
          example: 2021-06-06
          format: date
        changePassword:
          type: string
        message:
          type: string
        twoFactor:
          type: boolean
          example:
            - true
            - false
        lastActivityTime:
          type: string
          example: 2021-06-06
          format: date
        privacyPolicyAcceptanceRequired:
          type: boolean
          example:
            - true
            - false
    GenericResponseVulnerabilityEssentials:
      type: object
      description: "Login response schema "
      properties: 
        type:
          type: string
          example: Vulnerability Essentials
        message: 
            type: string
            example: SUCCESS
        results: 
            type: array
            items:
              $ref: '#/components/schemas/VulnerabilityEssentials'
        count: 
            type: integer
            format: int64
    VulnerabilityEssentials:
      type: object
      description: "VulnerabilityEssentials"
      properties: 
        vulnerabilityId: 
          type: string
          example: cve-2018-13379
        smCount:
          type: integer
          example: 12
          format: int32
        rmtFirstSeen:
          type: string
          example: 2021-06-06
          format: date
        rmtLastSeen: 
          type: string
          example: 2021-06-06
          format: date
        rmtUserCount: 
          type: integer
          example: 19
          format: int32
        rmtWebsiteCount: 
          type: integer
          example: 23
          format: int32
        arabicCount:
          type: integer
          example: 38
          format: int32
        chineseCount:
          type: integer
          example: 145
          format: int32
        englishCount: 
          type: integer
          example: 56
          format: int32
        russianCount: 
          type: integer
          example: 2
          format: int32
    GenericResponseVulnerabilityInfo:
      type: object
      description: "Login response schema "
      properties: 
        type:
          type: string
          example: Vulnerability Info
        message: 
            type: string
            example: SUCCESS
        results: 
            type: array
            items:
              $ref: '#/components/schemas/VulnerabilityEssentials'
        count: 
            type: integer
            format: int64
    VulnerabilityInfo:
      type: object
      description: "VulnerabilityEssentials"
      properties: 
        vulnerabilityId: 
          type: string
          example: cve-2018-13379
        smCount:
          type: integer
          example: 12
          format: int32
        rmtFirstSeen:
          type: string
          example: 2021-06-06
          format: date
        rmtLastSeen: 
          type: string
          example: 2021-06-06
          format: date
        rmtUserCount: 
          type: integer
          example: 19
          format: int32
        rmtWebsiteCount: 
          type: integer
          example: 23
          format: int32
        arabicCount:
          type: integer
          example: 38
          format: int32
        chineseCount:
          type: integer
          example: 145
          format: int32
        englishCount: 
          type: integer
          example: 56
          format: int32
        russianCount: 
          type: integer
          example: 2
          format: int32
    # Schema for error response body
    401:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
      example:
        status: UNAUTHORIZED
        message: Bad credentials
        errors: [User is unauthrised]
      required:
        - status
        - message
        - errors
    429:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: string
      example:
        status: TOO_MANY_REQUESTS
        message: Retry in 3000 seconds
        errors: [Too Many Requests]
      required:
        - status
        - message
        - errors
